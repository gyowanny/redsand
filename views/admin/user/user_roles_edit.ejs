<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../../partials/head %>
    <style>
        .padded-top-10 {margin-top: 10px}
        .padded-right {margin-right: 5px}
        .padded-left-3 {margin-left: 3px}
        .padded-right-5 {margin-right: 5px}
        .pointer-cursor {cursor: pointer}
    </style>
</head>
<body class="container">

<header>
    <% include ../../partials/header %>
</header>

<main>
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h3><%= form.title %></h3>
                <ul class="nav nav-pills card-header-pills padded-top-10">
                    <li class="nav-item">
                        <button id="btnAddApp" class="btn btn-primary" >Add</button>
                        <button id="btnSaveApp" class="btn btn-success">Save</button>
                        <button id="btnReset" class="btn btn-warning" onclick="location.reload(true)">Reset</button>
                    </li>
                </ul>
            </div>
            <div class="card-block">
                User: <strong><%= user.login %></strong>
                <input id="userId" type="hidden" value="<%- user.id %>"/>
                <table id="tableApps" class="table padded-top-10">
                    <thead class="thead-inverse">
                        <tr>
                            <th >Application</th>
                            <th class="col-md-8">Roles</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% user.orgs.forEach(function(org) { %>
                        <tr>
                            <td class="orgId"><%= org.org_id %></td>
                            <td class="orgRoles">
                                <div class="row padded-full-10">
                                    <div class="d-flex flex-row flex-wrap roles">
                                        <% org.roles.forEach(function(role) { %>
                                        <span class="badge badge-default text-right padded-right"><%- role %>
                                            <a class="removeRole padded-left-3 pointer-cursor">
                                                <span class="fa fa-times-circle" aria-label="Remove"></span>
                                            </a>
                                        </span>
                                        <% }); %>
                                    </div>
                                    <button class="btn btn-primary btn-sm padded-right-5 btnAddRole">+</button>
                                    <button class="btn btn-danger btn-sm btnCancel">x</button>
                                </div>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</main>

<footer class="footer">
    <% include ../../partials/footer %>
    <script type="text/javascript">

        function addApp() {
            var config = {
                headers: {"x-access-token": getTokenFromSessionStorage()},
                url: '/ui/admin/user/'+getUserId()+'/orgs',
                type : 'get',
                dataType : 'json',
                encode: true,
                success : function(result) {
                    if (result.success === true) {
                        createAppRow(result.message);
                    }
                },
                error: function(xhr, resp, text) {
                    alert(JSON.stringify(xhr.responseText).message);
                }
            };
            $.ajax(config);
        }

        function getUserId() {
            return $("#userId").val();
        }

        function createAppRow(remainingApps) {
            var buttons = '<button class="btn btn-primary btn-sm padded-right-5 btnAddRole">+</button>'
                    + '<button class="btn btn-danger btn-sm btnCancel">x</button>';
            var options = "";
            $.each(remainingApps, function(index, value) {
               options += "<option value='"+value+"'>"+value+"</option>";
            });
            var selectOrg = '<select class="form-control orgSelect">'+options+'</select>';
            var newTableRow = '<tr><td class="orgIdSelect">'+selectOrg+'</td><td class="orgRoles"><div class="row padded-full-10"><div class="d-flex flex-row flex-wrap roles"></div>'+buttons+'</div></td></tr>';
            $("#tableApps tr:last").after(newTableRow);
            $(".btnAddRole").show();
            $(".btnAddRole").focus();
            $("#tableApps tr:last").find(".btnCancel").hide();
            $("#tableApps tr:last").find(".btnAddRole").on("click", addRole);
            $("#tableApps tr:last").find(".btnCancel").on("click", closeClick);
            setKeyListeners();
        }

        function addRole() {
            var newRoleInput = "<div class='roleValue'><input type='text' class='roleInput padded-right'></div>";
            $(this).siblings(".roles").append(newRoleInput);
            $(this).siblings(".roles").find(".roleInput").focus();
            $(this).hide();
            $(this).siblings(".btnCancel").show();
        }

        function closeClick() {
            $(this).siblings(".roles").find(".roleInput").remove();
            resetButtons()
        }

        function resetButtons() {
            $(".btnAddRole").show();
            $(".btnAddRole").focus();
            $(".btnCancel").hide();
        }

        function saveRole(inputTarget) {
            var inputValue = inputTarget.children("input[type=text]").val();
            var label = '<span class="badge badge-default text-right padded-right">'+inputValue+'<a class="removeRole padded-left-3 pointer-cursor"><span class="fa fa-times-circle" aria-label="Remove"></span></a></span>';
            inputTarget.html(label);
            //We need to add the remove role event here since the badge is dynamically created
            $('.badge').on('click', '.removeRole', function(event) {
                $(this).parent().remove();
            });
            $(".btnAddRole").show();
            $(".btnAddRole").focus();
            $(".btnCancel").hide();
            $(this).parent().find(".roleInput").remove();
        }

        function setKeyListeners() {
            $(".roles").on('keypress', '.roleInput', function(event) {
                if (event.which == 13) {
                    saveRole($(this).parent());
                }
            });
            $(".roles").on('keyup', '.roleInput', function(event) {
                if (event.keyCode == 27) {
                    $(this).parent().remove();
                    resetButtons();
                }
            });
        }

        function getAppsRolesFromTable() {
            var data = [];
            var tableRows = $("#tableApps tr").toArray();
            for(var i = 1; i < tableRows.length; i++) {
                var orgSelect = $(tableRows[i]).children(".orgIdSelect").children(".orgSelect");
                var orgId;
                if (orgSelect.val()) {
                    orgId = orgSelect.val();
                } else {
                    orgId = $(tableRows[i]).children(".orgId").text().trim();
                }
                var roles = [];
                var badges = $(tableRows[i]).find(".badge").toArray();
                for(var j = 0; j < badges.length; j++) {
                    roles.push(badges[j].innerText.trim());
                }
                if (roles.length > 0) {
                    data.push({org_id: orgId, roles: roles});
                }
            }
            return data;
        }

        function save() {
            var data = {data: getAppsRolesFromTable()};

            var config = {
                headers: {"x-access-token": getTokenFromSessionStorage()},
                url: '/ui/admin/user/'+getUserId()+'/orgs',
                type : "put",
                contentType: "application/json",
                dataType : 'json',
                data : JSON.stringify(data),
                encode: true,
                success : function(result) {
                    if (result.success === true) {
                        location.reload(true);
                    }
                },
                error: function(xhr, resp, text) {
                    alert(JSON.stringify(xhr.responseText).message);
                }
            };
            $.ajax(config);
        }

        $(document).ready(function() {
            $(function(){
                $("#btnSaveApp").on("click", save);
                $(".btnAddRole").on("click", addRole);
                $(".btnCancel").on("click", closeClick);
                $("#btnAddApp").bind("click", addApp);
                $('.badge').on('click', '.removeRole', function(event) {
                    $(this).parent().remove();
                });
                $(".btnCancel").hide();
                setKeyListeners();
            });
        });

    </script>

</footer>

</body>
</html>